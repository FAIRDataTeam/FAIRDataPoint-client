name: "Test & Build"

on:
  push:
  pull_request:


jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16]

    env:
      PUBLIC_IMAGE: fairdata/fairdatapoint-client
      PRIVATE_IMAGE: ${{ secrets.PRIVATE_REGISTRY_URL }}/fairdatapoint-client

    steps:
      # (1) -> Preparations
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # (2) -> Build app and Docker image
      - name: Build
        run: npm run build

      - name: Create build info
        run: ./scripts/build_info.sh

      # (3) -> Docker [test build]
      - name: Docker meta [test]
        id: meta-test
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.PUBLIC_IMAGE }}
          tags: |
            type=sha

      - name: Docker build+push [test]
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ steps.meta-test.outputs.tags }}
          labels: ${{ steps.meta-test.outputs.labels }}

      # (4) -> Docker [private registry]
      - name: Docker login [private]
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.PRIVATE_REGISTRY_URL }}
          username: ${{ secrets.PRIVATE_REGISTRY_USERNAME }}
          password: ${{ secrets.PRIVATE_REGISTRY_PASSWORD }}

      - name: Docker meta [private]
        id: meta-private
        if: github.event_name != 'pull_request'
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.PRIVATE_IMAGE }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Docker build+push [private]
        uses: docker/build-push-action@v3
        if: github.event_name != 'pull_request' && steps.meta-private.outputs.tags != ''
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-private.outputs.tags }}
          labels: ${{ steps.meta-private.outputs.labels }}

      # (5) -> Docker [Docker Hub]
      - name: Docker login [public]
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Docker meta [public]
        id: meta-public
        if: github.event_name != 'pull_request'
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.PUBLIC_IMAGE }}
          tags: |
            type=raw,value=develop,enable=${{ github.ref == format('refs/heads/{0}', 'develop') }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}

      - name: Docker build+push [public]
        uses: docker/build-push-action@v3
        if: github.event_name != 'pull_request' && steps.meta-public.outputs.tags != ''
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-public.outputs.tags }}
          labels: ${{ steps.meta-public.outputs.labels }}


